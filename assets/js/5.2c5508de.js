(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{167:function(t,n,s){t.exports=s.p+"assets/img/Dom_render.cc580485.jpg"},173:function(t,n,s){t.exports=s.p+"assets/img/TCP3.a60a2ba1.jpeg"},174:function(t,n,s){t.exports=s.p+"assets/img/TCPnum.43c2bb62.png"},175:function(t,n,s){t.exports=s.p+"assets/img/TCP4.ff8e74d1.jpeg"},223:function(t,n,s){"use strict";s.r(n);var e=[function(){var t=this._self._c;return t("h1",{attrs:{id:"浏览器相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器相关"}},[this._v("#")]),this._v(" 浏览器相关")])},function(){var t=this._self._c;return t("h2",{attrs:{id:"从一个url地址到最终页面渲染完成，发生了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从一个url地址到最终页面渲染完成，发生了什么"}},[this._v("#")]),this._v(" 从一个url地址到最终页面渲染完成，发生了什么?")])},function(){var t=this,n=t._self._c;return n("li",[n("p",[t._v("DNS解析：将域名地址解析为IP地址（依次从下面查找）"),n("br"),t._v("\n-- 读取浏览器DNS缓存"),n("br"),t._v("\n-- 系统DNS缓存"),n("br"),t._v("\n-- 路由器DNS缓存"),n("br"),t._v("\n-- 网络运营商DNS缓存"),n("br"),t._v("\n-- 递归搜索  例如blog.baidu.com"),n("br"),t._v("\n      1. .com域名下查找DNS解析"),n("br"),t._v("\n      2. .baidu域名下查找"),n("br"),t._v("\n      3. blog域名下查找"),n("br"),t._v("\n      4. 都未找到出错")])])},function(){var t=this._self._c;return t("li",[t("p",[this._v("发送请求\n-- 请求报文：HTTP协议的通信内容")])])},function(){var t=this._self._c;return t("li",[t("p",[this._v("接收相应\n-- 响应报文")])])},function(){var t=this._self._c;return t("li",[t("p",[this._v("渲染页面\n-- 遇见HTML标记，浏览器调用HTML解析器解析成Token标记并构建成dom树    DOM\n-- 遇见style/link标记：浏览器调用CSS解析器，处理CSS标记并构建cssom树    CSSOM\n-- 遇到script标记，调用javascript解析器，处理script代码（绑定事件，修改dom树/cssom树）  JavaScript\n-- 将dom树和cssom树合并成一个渲染树   RenderTree"),t("br"),this._v("\n-- 根据渲染树来计算布局，计算每个节点的几何信息(布局)  Layout\n-- 将各个节点颜色绘制到屏幕上（渲染）  Paint\n补充：真实DOM和其解析流程\n如下图为 webkit 渲染引擎工作流程图\n"),t("img",{attrs:{src:s(167),alt:"Dom_render.jpg"}})])])},function(){var t=this._self._c;return t("div",{staticClass:"danger custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("注意")]),this._v(" "),t("pre",[t("code",[this._v("1. 这五个步骤不一定按照顺序执行。如果dom树或cssom树被修改了，可能会执行多次布局和渲染，往往在实际页面中，这些步骤都会执行多次\n2. CSS阻塞：CSS在head中使用link引入时会阻塞页面的渲染，CSS也会阻塞JS的执行，但是CSS不阻塞外部脚本的加载\n3. JS阻塞：直接通过script src引入的JS脚本会阻塞页面的渲染（如果添加[defer async](https://www.cnblogs.com/jiasm/p/7683930.html)则不会阻塞渲染）, 但是JS不阻塞资源的加载，JS会按顺序执行，前面的执行时会阻塞后续JS的执行\n4. 当页面被CSS或JS阻塞时，webkit会调用HTMLPreloadScanner来扫描后续的代码，使用预加载器下载外部资源\n")])])])},function(){var t=this._self._c;return t("ol",{attrs:{start:"6"}},[t("li",[this._v("断开连接：TCP四次挥手"),t("br"),this._v("\n-- 第一次挥手： 由浏览器发起的，发送给服务器，我东西发送完了（请求报文），你准备关闭吧"),t("br"),this._v("\n-- 第二次挥手： 由服务器发起的，告诉浏览器，我东西接收完了（请求报文），我准备关闭了，你也准备吧"),t("br"),this._v("\n-- 第三次挥手： 由服务器发起，告诉浏览器，我东西发送完了（响应报文），你准备关闭吧"),t("br"),this._v("\n第四次挥手：由浏览器发起，告诉服务器，我东西接收完了，我准备关闭了（响应报文），你也准备吧"),t("br"),this._v(" "),t("img",{attrs:{src:s(175),alt:"TCP"}})])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"为什么利用多个域名来存储网站资源会更有效-？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么利用多个域名来存储网站资源会更有效-？"}},[this._v("#")]),this._v(" 为什么利用多个域名来存储网站资源会更有效 ？")])},function(){var t=this._self._c;return t("h2",{attrs:{id:"window-常用属性与方法有哪些-？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#window-常用属性与方法有哪些-？"}},[this._v("#")]),this._v(" window 常用属性与方法有哪些 ？")])},function(){var t=this,n=t._self._c;return n("ul",[n("li",[t._v("window 对象的常用属性\n"),n("ul",[n("li",[t._v("window.self 返回当前窗口的引用")]),t._v(" "),n("li",[t._v("window.parent   返回当前窗体的父窗体对象")]),t._v(" "),n("li",[t._v("window.top 返回当前窗体最顶层的父窗体的引用")]),t._v(" "),n("li",[t._v("window.outerwidth       返回当前窗口的外部宽")]),t._v(" "),n("li",[t._v("window.outerheight  返回当前窗口的外部高")]),t._v(" "),n("li",[t._v("window.innerwidth       返回当前窗口的可显示区域宽")]),t._v(" "),n("li",[t._v("window.innerheight  返回当前窗口的可显示区域高")]),t._v(" "),n("li",[t._v("提示：通过直接在 Chrome 控制台中输入 console.log(window) 可以查看到其所有的被当前浏览器支持的属性及值。")])])]),t._v(" "),n("li",[t._v("window 对象的常用方法\n"),n("ul",[n("li",[t._v("window.prompt()   弹出一个输入提示框，若用户点击了“取消”则返回 null")]),t._v(" "),n("li",[t._v("window.alert()    弹出一个警告框")]),t._v(" "),n("li",[t._v("window.confirm()  弹出一个确认框")]),t._v(" "),n("li",[t._v("window.close()  关闭当前浏览器窗口。有些浏览器对此方法有限制。")]),t._v(" "),n("li",[t._v("window.open(uri, [name], [features])  打开一个浏览器窗口，显示指定的网页。name 属性值可以是“_blank”、“_self”、“_parent”、“_top”、任意指定的一个窗口名。")]),t._v(" "),n("li",[t._v("window.blur( )    指定当前窗口失去焦点")]),t._v(" "),n("li",[t._v("window.focus( ) 指定当前窗口获得焦点")]),t._v(" "),n("li",[t._v("已废弃 window.showModalDialog(uri, [dataFromParent])  打开一个“模态窗口”（打开的子窗口只要不关闭，其父窗口即无法获得焦点；且父子窗口间可以传递数据）")])])])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"document-常用属性与方法有哪些-？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#document-常用属性与方法有哪些-？"}},[this._v("#")]),this._v(" document 常用属性与方法有哪些 ？")])},function(){var t=this,n=t._self._c;return n("ul",[n("li",[n("p",[t._v("document 常见的属性")]),t._v(" "),n("ul",[n("li",[t._v("body 提供对  元素的直接访问。对于定义了框架集的文档，该属性引用最外层的 。")]),t._v(" "),n("li",[t._v("cookie 设置或返回与当前文档有关的所有 cookie。")]),t._v(" "),n("li",[t._v('domain 返回当前文档的域名。 (例:"www.bilibili.com")')]),t._v(" "),n("li",[t._v("lastModified 返回文档被最后修改的日期和时间。")]),t._v(" "),n("li",[t._v('referrer 返回载入当前文档的文档的 URL。(例:"https://www.bilibili.com/")')]),t._v(" "),n("li",[t._v("title 返回当前文档的标题。")]),t._v(" "),n("li",[t._v('URL 返回当前文档的 URL。(例:"https://www.bilibili.com/video/av24239225/?p=8")')])])]),t._v(" "),n("li",[n("p",[t._v("document常见的方法")]),t._v(" "),n("ul",[n("li",[t._v("write()：动态向页面写入内容")]),t._v(" "),n("li",[t._v("createElement(Tag)：创建一个 HTML 标签对象")]),t._v(" "),n("li",[t._v("getElementById(ID)：获得指定 id 的对象")]),t._v(" "),n("li",[t._v("getElementsByName(Name)：获得之前 Name 的对象")]),t._v(" "),n("li",[t._v("body.appendChild(oTag)：向 HTML 中插入元素对象")]),t._v(" "),n("li",[t._v("...")])])])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"获取屏幕宽高width-outerwidth-innerwidth-clientwidth的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取屏幕宽高width-outerwidth-innerwidth-clientwidth的区别"}},[this._v("#")]),this._v(" 获取屏幕宽高width(),outerWidth,innerWidth,clientWidth的区别")])},function(){var t=this,n=t._self._c;return n("ul",[n("li",[t._v("$(window).width()与$(window).height()：获得的是屏幕可视区域的宽高，不包括滚动条与工具条")]),t._v(" "),n("li",[t._v("document.documentElement.clientWidth与document.documentElement.clientHeight：获得的是屏幕可视区域的宽高，不包括滚动条与工具条")]),t._v(" "),n("li",[t._v("window.innerWidth与window.innerHeight：获得的是可视区域的宽高，但是window.innerWidth宽度包含了纵向滚动条的宽度，window.innerHeight高度包含了横向滚动条的高度")]),t._v(" "),n("li",[t._v("window.outerWidth与window.outerHeight：获得的是加上工具条与滚动条窗口的宽度与高度")]),t._v(" "),n("li",[t._v("document.body.clientWidth与document.body.clientHeight: document.body.clientWidth获得的也是可视区域的宽度，但是document.body.clientHeight获得的是body内容的高度")]),t._v(" "),n("li",[t._v("clientWidth & clientHeigh:  返回本身的宽高 + padding")]),t._v(" "),n("li",[t._v("clientTop & clientLeft: clientTop = boder.top(上边框的宽度) 、 clientLeft = boder.left(左边框的宽度)")]),t._v(" "),n("li",[t._v("offsetWidth & offsetHeight: 返回本身的宽高 + padding + border + 滚动条")]),t._v(" "),n("li",[t._v("offsetLeft & offsetTop: 所有HTML元素拥有offsetLeft和offsetTop属性来返回元素的X和Y坐标")]),t._v(" "),n("li",[t._v("scrollWidth & scrollHeight: 这两个属性是元素的内容区域加上内边距，再加上任何溢出内容的尺寸。因此，如果没有溢出时，这些属性与clientWidth和clientHeight是相等的")]),t._v(" "),n("li",[t._v("scrollLeft & scrollTop: 指定的是元素的滚动条的位置")])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"常见浏览器内核"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见浏览器内核"}},[this._v("#")]),this._v(" 常见浏览器内核")])},function(){var t=this._self._c;return t("p",[this._v("浏览器 的内核引擎，基本上是四分天下："),t("br"),this._v("\n1）Trident: IE 以Trident 作为内核引擎"),t("br"),this._v("\n2) Gecko: Firefox 是基于 Gecko 开发"),t("br"),this._v("\n3）WebKit: Safari, Google Chrome,傲游3,猎豹浏览器,百度浏览器 opera浏览器"),t("br"),this._v("\n4）Presto: Opera的内核，但由于市场选择问题，主要应用在手机平台--Opera mini"),t("br"),this._v("\nWekbit是一个开源的Web浏览器引擎，也就是浏览器的内核。Apple的Safari, Google的Chrome, Nokia S60平台的默认浏览器，Apple手机的默认浏览器，Android手机的默认浏览器均采用的Webkit作为器浏览器内核。Webkit的采用程度由 此可见一斑，理所当然的成为了当今主流的三大浏览器内核之一。另外两个分别是Gecko和Trident，大名鼎鼎的Firefox便是使用的Gecko 内核，而微软的IE系列则使用的是Trident内核。"),t("br"),this._v("\n另外，搜狗浏览器是双核的，双核并不是指一个页面由2个内核同时处理,而是所有网页（通常是标准通用标记语言的应用超文本标记语言）由webkit内核处理,只有银行网站用IE内核")])},function(){var t=this._self._c;return t("h2",{attrs:{id:"经常遇到的浏览器兼容性问题有哪些？原因和解决方法有哪些？常用hack技巧？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#经常遇到的浏览器兼容性问题有哪些？原因和解决方法有哪些？常用hack技巧？"}},[this._v("#")]),this._v(" 经常遇到的浏览器兼容性问题有哪些？原因和解决方法有哪些？常用hack技巧？")])},function(){var t=this,n=t._self._c;return n("ol",[n("li",[t._v("不同浏览器的标签默认的margin和padding不同（默认8像素）\n"),n("ul",[n("li",[t._v("解决办法：添加 *{margin:0;padding:0;}  或者 引用网上的normalize.css或reset.css样式文件")])])]),t._v(" "),n("li",[t._v("字体大小定义不同\n"),n("ul",[n("li",[t._v("问题表现：对字体大小small定义不同，Firefox为13px，而IE为16px，差别比较大")]),t._v(" "),n("li",[t._v("解决方法：使用指定的字体大小如14px或者使用em")])])]),t._v(" "),n("li",[t._v("3像素问题，\n"),n("ul",[n("li",[t._v("问题出现的浏览器：IE6及其更低的版本")]),t._v(" "),n("li",[t._v("问题描述：两个相邻的div之间有3个像素的空隙，一个div使用了float,而另一个没有使用产生的。")]),t._v(" "),n("li",[t._v("解决方法：\n"),n("ol",[n("li",[t._v("对另一个div也使用float;")]),t._v(" "),n("li",[t._v("给浮动的div添加属性margin-right: –3px，但是这样写，在其他浏览器又会不正常，所以我们需要添加IE6的hack，在属性margin-right前添加下划线_margin-right: –3px。（IE6以及更低版本的hack，是在属性前面添加下划线_）")])])])])]),t._v(" "),n("li",[t._v("双外边距浮动问题\n"),n("ul",[n("li",[t._v("问题出现的浏览器：IE6及其更低的版本")]),t._v(" "),n("li",[t._v("问题描述：任何浮动的元素上的外边距加倍，例如：如果元素设置的外边距为margin-left: 15px，在浏览器里会显示为margin-left: 30px。")]),t._v(" "),n("li",[t._v("解决方法：将元素的display属性设置为inline，因为元素为浮动的，所以这么设置不会影响元素在浏览器的显示。")])])]),t._v(" "),n("li",[t._v("IE6不支持min-*\n"),n("ul",[n("li",[t._v("问题出现的浏览器：IE6及其更低的版本")]),t._v(" "),n("li",[t._v("问题描述：IE6不支持min-height该属性。即使定义了元素高度，如果内容超过元素的高度，IE6在解析时，会自动延长元素的高度。")]),t._v(" "),n("li",[t._v("解决方法：利用IE6不识别!important，给元素设置固定高度，并且设置元素高度自动。\nHeight : auto  ! important;\nHeight:300px;\nMin_height:300px;\n因为IE6不识别!Important，它只识别到了height:300px,当内容超过300px时,它会自动延长高度。IE7以及其他浏览器都识别！Important，虽然定义了Height:300px,但是！Important的优先级别最高。所以内容超过300px时，还是会自动延长。")])])]),t._v(" "),n("li",[t._v("IE6不能定义1px左右宽度的容器\n"),n("ul",[n("li",[t._v("问题出现的浏览器：IE6及其更低的版本")]),t._v(" "),n("li",[t._v("问题描述：创建一个高度为1px的容器，在IE6中没效果。")]),t._v(" "),n("li",[t._v("解决方法：因为行高line-height在IE6下有默认值，设置ling-height: 1px | overflow: hidden | zoom: 0.08。")])])]),t._v(" "),n("li",[t._v("IE6不支持png-24透明图片\n"),n("ul",[n("li",[t._v("问题出现的浏览器：IE6及其更低的版本")]),t._v(" "),n("li",[t._v("问题描述：在IE6中，使用png-24透明图片，不透明。")]),t._v(" "),n("li",[t._v("解决方法：图片使用gif格式或者png-8格式图片。")])])]),t._v(" "),n("li",[t._v("IE5~8不支持opacity\n"),n("ul",[n("li",[t._v("问题出现的浏览器：IE8及其更低的版本")]),t._v(" "),n("li",[t._v("问题描述：IE5~8不支持CSS属性opacity")]),t._v(" "),n("li",[t._v("解决方法：这时可以另外添加ie滤镜alpha，如下：")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("opacity")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filter")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alpha")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opacity "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*for IE5~7*/")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ms"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("filter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"progid:DXImageTransform.Microsoft.Alpha(opacity = 80)"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*for IE8*/")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("Firefox点击链接出现的虚线框\n"),n("ul",[n("li",[t._v("问题出现的浏览器：Firefox浏览器")]),t._v(" "),n("li",[t._v("问题描述：Firefox浏览器在点击链接时，会自动在元素周围添加一个虚线边框。")]),t._v(" "),n("li",[t._v("解决方法：我们为了和其他浏览器保持一致，需要去掉该虚线框，我们可以给a标签设置outline属性，如下：\na {outline: none;}  a:focus {outline: none;}")])])]),t._v(" "),n("li",[t._v("外边距叠加")])])},function(){var t=this._self._c;return t("pre",[t("code",[this._v("  * 问题出现的浏览器：所有浏览器\n  * 问题描述：当两个或者更多垂直外边距相遇时，它们将形成一个外边距，这个外边距的高度等于两个发生叠加的外边距的高度中的较大者。\n  * 解决方法：这并不是一个浏览器Bug，这是CSS的一个特性，如果想要防止这种情况发生，和padding搭配使用。（要根据实际情况来解决，这里只是简要说明哈~~~）\n")])])},function(){var t=this._self._c;return t("ol",{attrs:{start:"11"}},[t("li",[this._v("图片默认间距")])])},function(){var t=this._self._c;return t("pre",[t("code",[this._v("  *  问题出现的浏览器：主流浏览器都有此问题\n  * 问题描述：几个img标签排列的时候，浏览器都会有默认的间距。\n  * 解决方法：为img标签添加属性float。\n")])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"浏览器是怎么对-html5-的离线储存资源进行管理和加载的呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是怎么对-html5-的离线储存资源进行管理和加载的呢"}},[this._v("#")]),this._v(" 浏览器是怎么对 HTML5 的离线储存资源进行管理和加载的呢")])},function(){var t=this._self._c;return t("ol",[t("li",[this._v("在线的情况下，浏览器发现 html 头部有 manifest 属性，它会请求 manifest 文件，如果是第一次访问 app，那么浏览器就会根据 manifest 文件的内容下载相应的资源并且进行离线存储。")]),this._v(" "),t("li",[this._v("如果已经访问过 app 并且资源已经离线存储了，那么浏览器就会使用离线的资源加载页面，然后浏览器会对比新的 manifest 文件与旧的 manifest 文件，如果文件没有发生改变，就不做任何操作，如果文件改变了，那么就会重新下载文件中的资源并进行离线存储。")]),this._v(" "),t("li",[this._v("离线的情况下，浏览器就直接使用离线存储的资源。")])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"请描述一下-cookies，sessionstorage-和-localstorage-的区别-？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请描述一下-cookies，sessionstorage-和-localstorage-的区别-？"}},[this._v("#")]),this._v(" 请描述一下 cookies，sessionStorage 和 localStorage 的区别 ？")])},function(){var t=this,n=t._self._c;return n("ol",[n("li",[n("p",[t._v("区别：")]),t._v(" "),n("ul",[n("li",[t._v("cookie 是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。")]),t._v(" "),n("li",[t._v("cookie 数据始终在同源的 http 请求中携带（即使不需要），也会在浏览器和服务器间来回传递。")]),t._v(" "),n("li",[t._v("sessionStorage 和 localStorage 不会自动把数据发给服务器，仅在本地保存。")])])]),t._v(" "),n("li",[n("p",[t._v("存储大小")]),t._v(" "),n("ul",[n("li",[t._v("cookie 数据大小不能超过 4k。")]),t._v(" "),n("li",[t._v("sessionStorage 和 localStorage 虽然也有存储大小的限制，但比 cookie 大得多，可以达到 5M 或更大。")])])]),t._v(" "),n("li",[n("p",[t._v("有期时间")]),t._v(" "),n("ul",[n("li",[t._v("localStorage 存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；")]),t._v(" "),n("li",[t._v("sessionStorage 数据在当前浏览器窗口关闭后自动删除。\ncookie  设置的 cookie 过期时间之前一直有效，即使窗口或浏览器关闭。")])])])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"讲述你对-reflow-和-repaint-的理解。（具体可见css文档中）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#讲述你对-reflow-和-repaint-的理解。（具体可见css文档中）"}},[this._v("#")]),this._v(" 讲述你对 reflow 和 repaint 的理解。（具体可见CSS文档中）")])},function(){var t=this,n=t._self._c;return n("ul",[n("li",[n("p",[t._v("严重性： 在性能优先的前提下，性能消耗 reflow 大于 repaint。")])]),t._v(" "),n("li",[n("p",[t._v("体现：repaint 是某个 DOM 元素进行重绘；reflow 是整个页面进行重排，也就是页面所有 DOM 元素渲染。")])]),t._v(" "),n("li",[n("p",[t._v("如何触发：style 变动造成 repaint 和 reflow。")]),t._v(" "),n("ol",[n("li",[t._v("不涉及任何 DOM 元素的排版问题的变动为 repaint，例如元素的 color/text-align/text-decoration 等等属性的变动。")]),t._v(" "),n("li",[t._v("除上面所提到的 DOM 元素 style 的修改基本为 reflow。例如元素的任何涉及 长、宽、行高、边框、display 等 style 的修改。")])])]),t._v(" "),n("li",[n("p",[t._v("常见触发场景")]),t._v(" "),n("ol",[n("li",[t._v("触发 repaint：\n"),n("ul",[n("li",[t._v("color 的修改，如 color=#ddd；")]),t._v(" "),n("li",[t._v("text-align 的修改，如 text-align=center；")]),t._v(" "),n("li",[t._v("a:hover 也会造成重绘。")]),t._v(" "),n("li",[t._v(":hover 引起的颜色等不导致页面回流的 style 变动。")])])]),t._v(" "),n("li",[t._v("触发 reflow：\n"),n("ul",[n("li",[t._v("width/height/border/margin/padding 的修改，如 width=778px；")]),t._v(" "),n("li",[t._v("动画，:hover 等伪类引起的元素表现改动，display=none 等造成页面回流；")]),t._v(" "),n("li",[t._v("appendChild 等 DOM 元素操作；")]),t._v(" "),n("li",[t._v("font 类 style 的修改；")]),t._v(" "),n("li",[t._v("background 的修改，注意着字面上可能以为是重绘，但是浏览器确实回流了，经过浏览器厂家的优化，部分 background 的修改只触发 repaint，当然 IE 不用考虑；")]),t._v(" "),n("li",[t._v("scroll 页面，这个不可避免；")]),t._v(" "),n("li",[t._v("resize 页面，桌面版本的进行浏览器大小的缩放，移动端的话，还没玩过能拖动程序，resize 程序窗口大小的多窗口操作系统。")]),t._v(" "),n("li",[t._v("读取元素的属性（这个无法理解，但是技术达人是这么说的，那就把它当做定理吧）：读取元素的某些属性（offsetLeft、offsetTop、offsetHeight、offsetWidth、scrollTop/Left/Width/Height、clientTop/Left/Width/Height、getComputedStyle()、currentStyle(in IE))；")])])])])]),t._v(" "),n("li",[n("p",[t._v("如何避免：")]),t._v(" "),n("ul",[n("li",[t._v("尽可能在 DOM 末梢通过改变 class 来修改元素的 style 属性：尽可能的减少受影响的 DOM 元素。")]),t._v(" "),n("li",[t._v("避免设置多项内联样式：使用常用的 class 的方式进行设置样式，以避免设置样式时访问 DOM 的低效率。")]),t._v(" "),n("li",[t._v("设置动画元素 position 属性为 fixed 或者 absolute：由于当前元素从 DOM 流中独立出来，因此受影响的只有当前元素，元素 repaint。")]),t._v(" "),n("li",[t._v("牺牲平滑度满足性能：动画精度太强，会造成更多次的 repaint/reflow，牺牲精度，能满足性能的损耗，获取性能和平滑度的平衡。")]),t._v(" "),n("li",[t._v("避免使用 table 进行布局：table 的每个元素的大小以及内容的改动，都会导致整个 table 进行重新计算，造成大幅度的 repaint 或者 reflow。改用 div 则可以进行针对性的 repaint 和避免不必要的 reflow。")]),t._v(" "),n("li",[t._v("避免在 CSS 中使用运算式：学习 CSS 的时候就知道，这个应该避免，不应该加深到这一层再去了解，因为这个的后果确实非常严重，一旦存在动画性的 repaint/reflow，那么每一帧动画都会进行计算，性能消耗不容小觑。")])])])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"什么是跨域-解决跨域的办法有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域-解决跨域的办法有哪些"}},[this._v("#")]),this._v(" 什么是跨域? 解决跨域的办法有哪些?")])},function(){var t=this,n=t._self._c;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 同源策略\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 浏览器安全策略\n   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 协议名、域名、端口号必须完全一致\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 跨域\n   违背同源策略就会产生跨域\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 解决跨域\n   "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonp、cors")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Access"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Origin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("、postMessage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML5")]),t._v(" XMLHttpRequest Level "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("中的"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),t._v("，且是为数不多可以跨域操作的window属性之一"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、服务器代理"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jsonp 示例  利用script标签天然能跨域的特性解决跨域问题")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. 创建script标签")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'script'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2. 设置回调函数")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数据请求回来会被触发的函数")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3. 设置script的scr属性,设置请求地址")]),t._v("\nscript"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:3000?callback=getData'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4. 让script标签生效")]),t._v("\ndocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"http状态码-status-code-常见示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http状态码-status-code-常见示例"}},[this._v("#")]),this._v(" HTTP状态码(Status code)常见示例")])},function(){var t=this,n=t._self._c;return n("ul",[n("li",[n("p",[t._v("1xx: 临时回应，表示客户端继续")])]),t._v(" "),n("li",[n("p",[t._v("2xx: 请求成功")]),t._v(" "),n("ul",[n("li",[t._v("200: 请求成功")])])]),t._v(" "),n("li",[n("p",[t._v("3xx: 表示请求的目标有变化，希望客户端进一步处理")]),t._v(" "),n("ul",[n("li",[t._v("301: 永久性跳转")]),t._v(" "),n("li",[t._v("302: 临时性跳转")]),t._v(" "),n("li",[t._v("304: 跟客户端缓存一致没有更新")])])]),t._v(" "),n("li",[n("p",[t._v("4xx: 客户端请求错误")]),t._v(" "),n("ul",[n("li",[t._v("403: 无权限")]),t._v(" "),n("li",[t._v("404: 表示请求的页面不存在")]),t._v(" "),n("li",[t._v("418: It’s\ta\tteapot.\t这是一个彩蛋，来自ietf的一个愚人节玩笑")])])]),t._v(" "),n("li",[n("p",[t._v("5xx: 服务端请求错误")]),t._v(" "),n("ul",[n("li",[t._v("500: 服务端错误")]),t._v(" "),n("li",[t._v("503: 服务端暂时性错误，可以一会再试")])])])])},function(){var t=this,n=t._self._c;return n("table",[n("thead",[n("tr",[n("th",[t._v("状态码")]),t._v(" "),n("th",[t._v("响应类别")]),t._v(" "),n("th",[t._v("中文意思")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("1XX")]),t._v(" "),n("td",[t._v("信息性状态码（Informational）")]),t._v(" "),n("td",[t._v("服务器正在处理请求")])]),t._v(" "),n("tr",[n("td",[t._v("2XX")]),t._v(" "),n("td",[t._v("成功状态码（Success）")]),t._v(" "),n("td",[t._v("请求已正常处理完毕")])]),t._v(" "),n("tr",[n("td",[t._v("3XX")]),t._v(" "),n("td",[t._v("重定向状态码（Redirection）")]),t._v(" "),n("td",[t._v("需要进行额外操作以完成请求")])]),t._v(" "),n("tr",[n("td",[t._v("4XX")]),t._v(" "),n("td",[t._v("客户端错误状态码（Client Error）")]),t._v(" "),n("td",[t._v("客户端原因导致服务器无法处理请求")])]),t._v(" "),n("tr",[n("td",[t._v("5XX")]),t._v(" "),n("td",[t._v("服务器错误状态码（Server Error）")]),t._v(" "),n("td",[t._v("服务器原因导致处理请求出错")])])])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"浏览器http请求并发数和tcp连接的关系-头条"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器http请求并发数和tcp连接的关系-头条"}},[this._v("#")]),this._v(" 浏览器HTTP请求并发数和TCP连接的关系(头条)")])},function(){var t=this,n=t._self._c;return n("ol",[n("li",[n("p",[t._v("网页中的图片资源为什么分放在不同的域名下？\n浏览器对并发请求的数目限制是针对域名的，即针对同一域名（包括二级域名）在同一时间支持的并发请求数量的限制。如果请求数目超出限制，则会阻塞。因此，网站中对一些静态资源，使用不同的一级域名，可以提升浏览器并行请求的数目，加速界面资源的获取速度。")])]),t._v(" "),n("li",[n("p",[t._v("浏览器与服务器建立一个TCP连接后，是否会在完成一个http请求后断开？什么条件下会断开？\n在HTTP/1.0中，一个http请求收到服务器响应后，会断开对应的TCP连接。这样每次请求，都需要重新建立TCP连接，这样一直重复建立和断开的过程，比较耗时。所以为了充分利用TCP连接，可以设置头字段Connection: keep-alive，这样http请求完成后，就不会断开当前的TCP连接，后续的http请求可以使用当前TCP连接进行通信。"),n("br"),t._v("\nHTTP/1.1将Connection写入了标准，默认值为keep-alive。除非强制设置为Connection: close，才会在请求后断开TCP连接。"),n("br"),t._v("\n所以这一题的答案就是：默认情况下建立的TCP连接不会断开，只有在请求头中设置Connection: close才会在请求后关闭TCP连接。")])]),t._v(" "),n("li",[n("p",[t._v("一个TCP连接可以同时发送几个HTTP请求？\nHTTP/1.1中，单个TCP连接，在同一时间只能处理一个http请求，虽然存在Pipelining技术支持多个请求同时发送，但由于实践中存在很多问题无法解决，所以浏览器默认是关闭，所以可以认为是不支持同时多个请求。"),n("br"),t._v("\nHTTP2提供了多路传输功能（Multiplexing技术)，多个http请求，可以同时在同一个TCP连接中进行传输。")])]),t._v(" "),n("li",[n("p",[t._v("浏览器http请求的并发性是如何体现的？并发请求的数量有没有限制？\n页面资源请求时，浏览器会同时和服务器建立多个TCP连接，在同一个TCP连接上顺序处理多个HTTP请求。所以浏览器的并发性就体现在可以建立多个TCP连接，来支持多个http同时请求。")])])])}],r=s(0),i=Object(r.a)({},(function(){var t=this,n=t._self._c;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("ol",[t._m(2),t._v(" "),n("li",[n("p",[t._v("TCP连接：TCP三次握手"),n("br"),t._v(" "),n("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1344764",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP为什么需要3次握手与4次挥手"),n("OutboundLink")],1),n("br"),t._v("\n-- 第一次握手：由浏览器发起，告诉服务器我要发送请求了"),n("br"),t._v("\n-- 第二次握手：由服务器发起，告诉浏览器我准备接收了，你赶紧发送吧"),n("br"),t._v("\n-- 第三次握手：由浏览器发起，告诉服务器，我马上就发了，准备接收吧"),n("br"),t._v(" "),n("img",{attrs:{src:s(173),alt:"TCP"}})])]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5)]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),n("hr"),t._v(" "),t._m(8),t._v(" "),n("p",[t._v("确保用户在不同地区能用最快的速度打开网站，其中某个域名崩溃用户也能通过其他域名访问网站。")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),n("hr"),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),n("hr"),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),n("hr"),t._v(" "),t._m(17),t._v(" "),n("p",[t._v("*. 常见浏览器兼容性问题")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),n("hr"),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),n("hr"),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),n("hr"),t._v(" "),t._m(26),t._v(" "),n("p",[t._v("repaint 就是重绘，reflow 就是回流。")]),t._v(" "),t._m(27),t._v(" "),n("hr"),t._v(" "),t._m(28),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.cnblogs.com/sdcs/p/8484905.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端解决跨域的九种方法"),n("OutboundLink")],1)]),t._v(" "),t._m(29),n("hr"),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),n("p",[t._v("对我们前端来说，1xx系列的状态码是非常陌生的，原因是1xx的状态被浏览器http库直接处理掉了，不会让 上层应用知晓。")]),t._v(" "),t._m(32),t._v(" "),n("hr"),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),n("h2",{attrs:{id:"chrome浏览器最多允许对同一个域名host建立6个tcp连接，不同的浏览器有所区别。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#chrome浏览器最多允许对同一个域名host建立6个tcp连接，不同的浏览器有所区别。"}},[t._v("#")]),t._v(" "),n("font",{attrs:{color:"red"}},[t._v("Chrome浏览器")]),t._v("最多允许对"),n("font",{attrs:{color:"red"}},[t._v("同一个域名Host建立6个TCP连接")]),t._v("，不同的浏览器有所区别。\n"),n("img",{attrs:{src:s(174),alt:"TCPnum.png"}})],1)])}),e,!1,null,null,null);n.default=i.exports}}]);